{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/c/Users/jahn/my/pangolin/examples/nextjs-with-typescript/pages/[page].tsx\";\nimport React from 'react';\nimport { Forms } from '../pangolin'; // @ts-ignore\n\nexport var __N_SSP = true;\nexport default function home(_ref) {\n  var page = _ref.page,\n      formData = _ref.formData;\n  var validPage = Number.isInteger(Number(page));\n  var Form = Forms[Number(page)];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Forms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), validPage && /*#__PURE__*/_jsxDEV(Form, {\n      formData: formData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/mnt/c/Users/jahn/my/pangolin/examples/nextjs-with-typescript/pages/[page].tsx"],"names":["React","Forms","home","page","formData","validPage","Number","isInteger","Form"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,aAAtB,C,CAEA;;;AACA,eAAe,SAASC,IAAT,OAAkC;AAAA,MAAlBC,IAAkB,QAAlBA,IAAkB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAC/C,MAAMC,SAAS,GAAGC,MAAM,CAACC,SAAP,CAAiBD,MAAM,CAACH,IAAD,CAAvB,CAAlB;AACA,MAAMK,IAAI,GAAGP,KAAK,CAACK,MAAM,CAACH,IAAD,CAAP,CAAlB;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,SAAS,iBAAI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAED;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFhB;AAAA,kBADF;AAMD","sourcesContent":["import React from 'react';\nimport { applySession } from 'next-session';\nimport { Forms } from '../pangolin';\n\n// @ts-ignore\nexport default function home({ page, formData }) {\n  const validPage = Number.isInteger(Number(page));\n  const Form = Forms[Number(page)];\n\n  return (\n    <>\n      <h1>Forms</h1>\n      {validPage && <Form formData={formData} />}\n    </>\n  );\n}\n\nexport async function getServerSideProps({ query: params, req, res }: any) {\n  // TODO: Move logic into onGet imported function\n  await applySession(req, res);\n  const { session = {} } = req;\n\n  const { page } = params;\n  const { formData = {} } = session;\n\n  return {\n    props: { page, formData },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}