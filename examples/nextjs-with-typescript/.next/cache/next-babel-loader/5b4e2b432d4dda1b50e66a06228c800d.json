{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/c/Users/jahn/my/pangolin/examples/nextjs-with-typescript/pages/[page].tsx\";\nimport React from 'react';\nimport { applySession } from 'next-session';\nimport { useRouter } from 'next/router';\nimport { Forms, getHandler } from '../pangolin';\nimport { formData } from '../db';\n\nfunction handlePageLoad(_formIndex) {\n  return formData.data;\n} // @ts-ignore\n\n\nexport default function home({\n  formIndex,\n  formData,\n  validPage\n}) {\n  const Form = Forms[formIndex];\n  const router = useRouter();\n\n  const rerouteHandler = (nextPage, isValid, lastPage) => {\n    // TODO: Hook up isValid\n    router.push(lastPage ? nextPage : '/end');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Forms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), validPage && /*#__PURE__*/_jsxDEV(Form, {\n      formData: formData,\n      rerouteHandler: rerouteHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, this), !validPage && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"page out of range\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true);\n}\nexport async function getServerSideProps({\n  query: params,\n  req,\n  res\n}) {\n  await applySession(req, res);\n  const {\n    formIndex,\n    formData,\n    validPage\n  } = getHandler(req, handlePageLoad); // const { formIndex, formData, validPage } = getHandler(req);\n\n  console.log(formData);\n  return {\n    props: {\n      formIndex,\n      formData,\n      validPage\n    }\n  };\n}","map":{"version":3,"sources":["/mnt/c/Users/jahn/my/pangolin/examples/nextjs-with-typescript/pages/[page].tsx"],"names":["React","applySession","useRouter","Forms","getHandler","formData","handlePageLoad","_formIndex","data","home","formIndex","validPage","Form","router","rerouteHandler","nextPage","isValid","lastPage","push","getServerSideProps","query","params","req","res","console","log","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,aAAlC;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,cAAT,CAAwBC,UAAxB,EAA4C;AAC1C,SAAOF,QAAQ,CAACG,IAAhB;AACD,C,CAED;;;AACA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,SAAF;AAAaL,EAAAA,QAAb;AAAuBM,EAAAA;AAAvB,CAAd,EAAkD;AAC/D,QAAMC,IAAI,GAAGT,KAAK,CAACO,SAAD,CAAlB;AACA,QAAMG,MAAM,GAAGX,SAAS,EAAxB;;AAEA,QAAMY,cAAc,GAAG,CAACC,QAAD,EAAmBC,OAAnB,EAAqCC,QAArC,KAA2D;AAChF;AACAJ,IAAAA,MAAM,CAACK,IAAP,CAAYD,QAAQ,GAAGF,QAAH,GAAc,MAAlC;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGJ,SAAS,iBAAI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEN,QAAhB;AAA0B,MAAA,cAAc,EAAES;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFhB,EAGG,CAACH,SAAD,iBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHjB;AAAA,kBADF;AAOD;AAED,OAAO,eAAeQ,kBAAf,CAAkC;AAAEC,EAAAA,KAAK,EAAEC,MAAT;AAAiBC,EAAAA,GAAjB;AAAsBC,EAAAA;AAAtB,CAAlC,EAAoE;AACzE,QAAMtB,YAAY,CAACqB,GAAD,EAAMC,GAAN,CAAlB;AACA,QAAM;AAAEb,IAAAA,SAAF;AAAaL,IAAAA,QAAb;AAAuBM,IAAAA;AAAvB,MAAqCP,UAAU,CAACkB,GAAD,EAAMhB,cAAN,CAArD,CAFyE,CAGzE;;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAYpB,QAAZ;AAEA,SAAO;AACLqB,IAAAA,KAAK,EAAE;AAAEhB,MAAAA,SAAF;AAAaL,MAAAA,QAAb;AAAuBM,MAAAA;AAAvB;AADF,GAAP;AAGD","sourcesContent":["import React from 'react';\nimport { applySession } from 'next-session';\nimport { useRouter } from 'next/router';\nimport { Forms, getHandler } from '../pangolin';\nimport { formData } from '../db';\n\nfunction handlePageLoad(_formIndex: number) {\n  return formData.data;\n}\n\n// @ts-ignore\nexport default function home({ formIndex, formData, validPage }) {\n  const Form = Forms[formIndex];\n  const router = useRouter();\n\n  const rerouteHandler = (nextPage: string, isValid: boolean, lastPage: boolean) => {\n    // TODO: Hook up isValid\n    router.push(lastPage ? nextPage : '/end');\n  };\n\n  return (\n    <>\n      <h1>Forms</h1>\n      {validPage && <Form formData={formData} rerouteHandler={rerouteHandler} />}\n      {!validPage && <h1>page out of range</h1>}\n    </>\n  );\n}\n\nexport async function getServerSideProps({ query: params, req, res }: any) {\n  await applySession(req, res);\n  const { formIndex, formData, validPage } = getHandler(req, handlePageLoad);\n  // const { formIndex, formData, validPage } = getHandler(req);\n  console.log(formData);\n\n  return {\n    props: { formIndex, formData, validPage },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}